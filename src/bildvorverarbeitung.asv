function img_out = bildvorverarbeitung(img_in,para)
%% ****************************************************************
% ----------------------- Bildvorverarbeitung  ------------------------------
% ***************************************************************************
fprintf('Bildvorverarbeitung ...\n');
sigma_gauss = 5;
gaussian1 = fspecial('Gaussian', 21, sigma_gauss);
gaussian2 = fspecial('Gaussian', 21, sigma_gauss*1.6);  %imgaussfilt
dog_filter = gaussian1-gaussian2;
img_temp = zeros(,,size(img_in,3));
fprintf('--------Bilddrehen und -beschneiden ...\n');
for i = 1:size(img_in,3)
    %------------------------ Bilddrehen und Bildbeschneiden
    if para.rot
        img_temp = imrotate(img_in(:,:,i), para.rot);
    else
        img_temp = img_in(:,:,i);
    end
    img_temp(:,:,i) = img_temp(para.x1:para.x2,para.y1:para.y2);
end

%------------------------ Beleuchtungseffektkorrektur
fprintf('--------Beleuchtungseffektkorrektur ...\n');
% estimate flatfield and darkfield
[flatfield, darkfield] = BaSiC(img_temp,'darkfield','true','lambda',2.0,'lambda_dark',2.0);
basefluor =  BaSiC_basefluor(img_temp,flatfield,darkfield);
% image correction
img_out = zeros(size(img_temp));
for i = 1:size(img_temp,3)
    img_out(:,:,i) = (double(img_temp(:,:,i))-darkfield)./flatfield - basefluor(i);
end

%------------------------ Difference of Gaussians filter
fprintf('--------Sch?rfen ...\n');
for i = 1:size(img_out,3)
    img_out(:,:,i) = conv2(double(img_out(:,:,i)), dog_filter, 'same');
end
img_out = uint8(img_out);
end